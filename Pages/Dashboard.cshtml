@page
@model SAMS_IPT102.Pages.DashboardModel
@{
    ViewData["Title"] = "Welcome to your attendance record management.";
}

<section class="d-flex align-items-center justify-content-center flex-column vh-100">
    <div class="dashboard-wrapper">
        <div class="text-center mb-3">
            <h1>Student Attendance Record</h1>
            <p>Applicable for today's class (Do some refresh to reload the page)</p>
        </div>
        <div id="Dashboard">
            <div class="d-flex flex-row justify-content-between">
                <aside class="d-flex flex-column">
                    <div id="SubjectCode" class="d-inline-flex align-middle">
                        <label class="me-2">Subject Code:</label>
                        <p id="subjectCodeValue">N/A</p>
                    </div>
                    <div id="SubjectName" class="d-inline-flex align-middle">
                        <label class="me-2">Subject Name:</label>
                        <p id="subjectNameValue" class="text-truncate" style="max-width: 120px;">N/A</p>
                    </div>
                </aside>
                <aside class="d-flex flex-column">
                    <div id="Course" class="d-inline-flex align-middle">
                        <label class="me-2">Course:</label>
                        <p id="courseValue">N/A</p>
                    </div>
                </aside>
                <aside class="d-flex flex-column">
                    <div id="Room" class="d-inline-flex align-middle">
                        <label class="me-2">Year & Section:</label>
                        <p id="yearSectionValue">N/A</p>
                    </div>
                    <div id="TimeDetails" class="d-inline-flex align-middle">
                        <label class="me-2">Time:</label>
                        <p id="timeValue">(N/A)</p>
                    </div>
                </aside>
            </div>

            <div class="student-data">
                <div style="max-height: 320px; overflow-y: auto;">
                    <table class="table table-bordered" id="attendanceTable">
                        <thead>
                            <tr>
                                <th>Student Number</th>
                                <th>Student (LN, FN, MI)</th>
                                <th>Current Year &amp; Course</th>
                                <th>Current Section</th>
                                <th>Date &amp; Time (Time-In)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.AttendanceRecords != null && Model.AttendanceRecords.Any())
                            {
                                foreach (var record in Model.AttendanceRecords)
                                {
                                    <tr>
                                        <td>@record.StudentNumber</td>
                                        <td>@record.LastName, @record.FirstName @record.MiddleInitial.</td>
                                        <td>@record.Course</td>
                                        <td>@record.CurrentSection</td>
                                        <td>@record.AttendanceDateTime</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="5" class="text-center">No records available.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

    </div>

    <div class="d-md-flex align-items-center justify-content-center mt-3">
        <form method="post" asp-page-handler="GenerateAttendanceReport">
            <input type="hidden" id="subject_code" name="subject_code">
            <input type="hidden" id="subject_name" name="subject_name">
            <input type="hidden" id="room_assigned" name="room_assigned">
            <input type="hidden" id="school_campus" name="school_campus">
            <input type="hidden" id="school_course" name="school_course">
            <input type="hidden" id="year_section" name="year_section">
            <input type="hidden" id="professor_name" name="professor_name">
            <input type="hidden" id="start_classes" name="start_classes">
            <input type="hidden" id="end_classes" name="end_classes">
            <button type="submit" class="btn btn-primary me-2">Generate Attendance Report</button>
        </form>
        <!--<a class="btn btn-primary me-2" href="@Url.Page("/GenerateReports")">Generate Report</a>-->
        <button class="btn btn-danger me-2" data-bs-toggle="modal" data-bs-target="#clearAttendanceModal">Clear Attendance Logs</button>
        <a class="btn btn-primary me-2" href="@Url.Page("/AddStudent")">Add New Student</a>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#AddNewClassModal">Add New Classes</button>
    </div>

    <!-- Confirmation Modal -->
    <div class="modal fade" id="clearAttendanceModal" tabindex="-1" aria-labelledby="clearAttendanceModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="clearAttendanceModalLabel">Confirm Action</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to clear the attendance logs? This action cannot be undone.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <!-- Post request for clearing logs -->
                    <form method="post" asp-page-handler="ClearAttendanceLogs">
                        <button type="submit" class="btn btn-danger">Confirm</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Add New Class Modal -->
    <div class="modal fade" id="AddNewClassModal" tabindex="-1" aria-labelledby="AddNewClassModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="AddNewClassModalLabel">Confirm Action</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Do you want to proceed? All of saved details won't be recovered.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" onclick="submitForm()">Confirm</button>
                </div>
            </div>
        </div>
    </div>
</section>

<div class="principal-author">
    <a href="/SAMS-IPT102.zip" class="btn btn-link" download>
        Try this out.
    </a>
</div>

<!-- Loading Modal with Spinner -->
<div class="modal fade" id="loadingModal" tabindex="-1" aria-labelledby="loadingModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="loadingModalLabel">Please Wait</h5>
            </div>
            <div class="modal-body text-center">
                <div class="spinner-border text-primary mt-3" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p class="mt-2">Processing...</p>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const storedData = JSON.parse(localStorage.getItem("attendanceReportData"));
        if (storedData) {
            // Function to convert time to 12-hour format
            const formatTimeTo12Hour = (time) => {
                const [hours, minutes] = time.split(":").map(Number);
                const period = hours >= 12 ? "PM" : "AM";
                const adjustedHours = hours % 12 || 12;
                return `${adjustedHours}:${String(minutes).padStart(2, "0")} ${period}`;
            };

            document.getElementById("subjectCodeValue").textContent = storedData.subject_code || "N/A";
            document.getElementById("subjectNameValue").textContent = storedData.subject_name || "N/A";
            document.getElementById("courseValue").textContent = storedData.school_course || "N/A";
            document.getElementById("yearSectionValue").textContent = storedData.year_section || "N/A";
            document.getElementById("timeValue").textContent = `(${formatTimeTo12Hour(storedData.start_classes || "00:00")} - ${formatTimeTo12Hour(storedData.end_classes || "00:00")})`;
        }
    });

    function submitForm() {
        // Show an alert prompt before proceeding
        alert("You are about to submit the form. Please wait while we process.");

        // Get the modal element for "Confirm Action"
        const confirmReportModal = document.getElementById('confirmReport');

        // Explicitly hide the modal using Bootstrap's modal instance
        const modalInstance = bootstrap.Modal.getInstance(confirmReportModal);
        if (modalInstance) {
            modalInstance.hide();
        }

        // Check and clear LocalStorage
        if (localStorage.getItem("attendanceReportData")) {
            localStorage.removeItem("attendanceReportData");
        }

        // Show the loading modal
        const loadingModal = document.getElementById('loadingModal');
        const loadingModalInstance = new bootstrap.Modal(loadingModal);
        loadingModalInstance.show();

        // Simulate form submission and redirect after a delay
        setTimeout(() => {
            window.location.replace("/");
        }, 3000); // Adjust time as needed
    }

    // Get the data from localStorage
    const savedData = JSON.parse(localStorage.getItem('attendanceData'));

    // Populate hidden input fields with localStorage values
    if (savedData) {
        document.getElementById('subject_code').value = savedData.subject_code;
        document.getElementById('subject_name').value = savedData.subject_name;
        document.getElementById('room_assigned').value = savedData.room_assigned;
        document.getElementById('school_campus').value = savedData.school_campus;
        document.getElementById('school_course').value = savedData.school_course;
        document.getElementById('year_section').value = savedData.year_section;
        document.getElementById('professor_name').value = savedData.professor_name;
        document.getElementById('start_classes').value = savedData.start_classes;
        document.getElementById('end_classes').value = savedData.end_classes;
    }

</script>
